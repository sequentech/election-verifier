name: Test the agora-verifier

on:
  push:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'
    tags:
    - '**'
  pull_request:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'

jobs:
  py:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Install external dependencies
      run: |
        sudo apt update
        sudo apt install -y wget sharutils openjdk-8-jdk-headless
        wget https://scala.jfrog.io/artifactory/debian/sbt-0.13.18.deb
        sudo dpkg -i sbt-0.13.18.deb
        sudo update-alternatives --list java
        sudo update-alternatives --set java /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/java
        java -version

    - name: Install internal dependencies
      run: |
        export INTERNAL_GIT_VERSION="5.0.0"
        git clone https://github.com/agoravoting/agora-tally.git
        cd agora-tally && git checkout "${INTERNAL_GIT_VERSION}" && cd ..
        mv agora-tally/agora_tally .

        git clone https://github.com/agoravoting/agora-results.git
        cd agora-results && git checkout "${INTERNAL_GIT_VERSION}" && cd ..
        mv agora-results/ agora-results2
        mv agora-results2/agora_results .
        mv agora-results2/agora-results .

    # This is for caching purposes, just following the steps in 
    # https://www.scala-sbt.org/1.x/docs/GitHub-Actions-with-sbt.html
    - name: Coursier cache
      uses: coursier/cache-action@v5
    
    - name: Build the verifier
      run: |
        sbt clean proguard:proguard && ./package.sh

        # This is for caching purposes, just following the steps in 
        # https://www.scala-sbt.org/1.x/docs/GitHub-Actions-with-sbt.html
        rm -rf "$HOME/.ivy2/local" || true
        find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
        find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
        find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
        find $HOME/.sbt                              -name "*.lock"               -delete || true

    - name: run unittests
      run: |
        python3 -m unittest
